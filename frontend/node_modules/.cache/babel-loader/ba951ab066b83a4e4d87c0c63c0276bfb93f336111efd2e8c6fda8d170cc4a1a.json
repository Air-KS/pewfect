{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:3000/api/users/login', {\n          email: this.email,\n          password: this.password\n        });\n        const {\n          userId,\n          token,\n          role\n        } = response.data;\n\n        // Créer un objet utilisateur à partir de userId\n        const user = {\n          id: userId,\n          email: this.email,\n          role: role\n        };\n\n        // Ajout d'un log pour vérifier le nouvel objet utilisateur\n        console.log('User created:', user);\n\n        // Mettre à jour le localStorage\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n        localStorage.setItem('role', role);\n\n        // Ajout d'un log pour vérifier le stockage\n        console.log('User stored in localStorage:', localStorage.getItem('user'));\n\n        // Mettre à jour le store Vuex\n        this.$store.dispatch('login', {\n          user,\n          token,\n          role\n        });\n\n        // Redirige l'utilisateur en fonction de son rôle\n        if (role === 'admin' || role === 'responsable') {\n          this.$router.push({\n            name: 'Admin'\n          });\n        } else if (role === 'client') {\n          this.$router.push({\n            name: 'Accueil'\n          });\n        } else {\n          this.$router.push('/');\n        }\n      } catch (error) {\n        if (!error.response) {\n          this.errorMessage = 'Une erreur est survenue, veuillez réessayer ultérieurement.';\n        } else if (error.response.status === 400) {\n          this.errorMessage = error.response.data.error;\n        } else {\n          this.errorMessage = 'Une erreur est survenue, veuillez réessayer ultérieurement.';\n        }\n        console.error('Login failed:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","errorMessage","methods","login","response","post","userId","token","role","user","id","console","log","localStorage","setItem","JSON","stringify","getItem","$store","dispatch","$router","push","error","status"],"sources":["/home/zana/pewfect-1/frontend/src/views/loginPage.vue"],"sourcesContent":["<!--\n\t./frontend/src/views/loginPage.vue\n-->\n\n <template>\n\t<div class=\"login-container\">\n\t\t<h1>Login</h1>\n\t\t<!-- Formulaire de connexion -->\n\t\t<form @submit.prevent=\"login\">\n\t\t\t<div>\n\t\t\t\t<!-- Champ email -->\n\t\t\t\t<label for=\"login-email\">Email:</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"login-email\"\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tv-model=\"email\"\n\t\t\t\t\trequired\n\t\t\t\t\ttitle=\"Entrez votre mail\"\n\t\t\t\t\tplaceholder=\"example@mail.com\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<!-- Champ mot de passe -->\n\t\t\t\t<label for=\"login-password\">Password:</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"login-password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tv-model=\"password\"\n\t\t\t\t\trequired\n\t\t\t\t\ttitle=\"Entrez votre Mot de Passe\"\n\t\t\t\t\tplaceholder=\"Your password\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<!-- Bouton de connexion -->\n\t\t\t<button type=\"submit\">Login</button>\n\t\t</form>\n\t\t<!-- Message d'erreur affiché en cas de problème de connexion -->\n\t\t<p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n\t\t<p>\n\t\t\t<!-- Lien vers la page d'inscription -->\n\t\t\tDon't have an account?\n\t\t\t<router-link to=\"/register\">Register here</router-link>\n\t\t</p>\n\t</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n\tname: 'LoginPage',\n\tdata() {\n\t\treturn {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\terrorMessage: '',\n\t\t};\n\t},\n\n\tmethods: {\n\t\tasync login() {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.post(\n\t\t\t\t\t'http://localhost:3000/api/users/login',\n\t\t\t\t\t{\n\t\t\t\t\t\temail: this.email,\n\t\t\t\t\t\tpassword: this.password,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst { userId, token, role } = response.data;\n\n\t\t\t\t// Créer un objet utilisateur à partir de userId\n\t\t\t\tconst user = {\n\t\t\t\t\tid: userId,\n\t\t\t\t\temail: this.email,\n\t\t\t\t\trole: role,\n\t\t\t\t};\n\n\t\t\t\t// Ajout d'un log pour vérifier le nouvel objet utilisateur\n\t\t\t\tconsole.log('User created:', user);\n\n\t\t\t\t// Mettre à jour le localStorage\n\t\t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\t\t\tlocalStorage.setItem('token', token);\n\t\t\t\tlocalStorage.setItem('role', role);\n\n\t\t\t\t// Ajout d'un log pour vérifier le stockage\n\t\t\t\tconsole.log(\n\t\t\t\t\t'User stored in localStorage:',\n\t\t\t\t\tlocalStorage.getItem('user')\n\t\t\t\t);\n\n\t\t\t\t// Mettre à jour le store Vuex\n\t\t\t\tthis.$store.dispatch('login', { user, token, role });\n\n\t\t\t\t// Redirige l'utilisateur en fonction de son rôle\n\t\t\t\tif (role === 'admin' || role === 'responsable') {\n\t\t\t\t\tthis.$router.push({ name: 'Admin' });\n\t\t\t\t} else if (role === 'client') {\n\t\t\t\t\tthis.$router.push({ name: 'Accueil' });\n\t\t\t\t} else {\n\t\t\t\t\tthis.$router.push('/');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (!error.response) {\n\t\t\t\t\tthis.errorMessage =\n\t\t\t\t\t\t'Une erreur est survenue, veuillez réessayer ultérieurement.';\n\t\t\t\t} else if (error.response.status === 400) {\n\t\t\t\t\tthis.errorMessage = error.response.data.error;\n\t\t\t\t} else {\n\t\t\t\t\tthis.errorMessage =\n\t\t\t\t\t\t'Une erreur est survenue, veuillez réessayer ultérieurement.';\n\t\t\t\t}\n\t\t\t\tconsole.error('Login failed:', error);\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n\n<style scoped>\n/* Styles pour le conteneur de connexion */\n.login-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 100vh;\n}\n\n/* Styles pour le message d'erreur */\n.error-message {\n\tcolor: red;\n\tmargin-top: 10px;\n}\n</style>\n"],"mappings":";AA+CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACdC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACN,OAAO;MACNC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IACf,CAAC;EACF,CAAC;EAEDC,OAAO,EAAE;IACR,MAAMC,KAAKA,CAAA,EAAG;MACb,IAAI;QACH,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAChC,uCAAuC,EACvC;UACCN,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QAChB,CACD,CAAC;QAED,MAAM;UAAEM,MAAM;UAAEC,KAAK;UAAEC;QAAK,IAAIJ,QAAQ,CAACN,IAAI;;QAE7C;QACA,MAAMW,IAAG,GAAI;UACZC,EAAE,EAAEJ,MAAM;UACVP,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBS,IAAI,EAAEA;QACP,CAAC;;QAED;QACAG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;;QAElC;QACAI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;QAClDI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;QACpCM,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAAC;;QAElC;QACAG,OAAO,CAACC,GAAG,CACV,8BAA8B,EAC9BC,YAAY,CAACI,OAAO,CAAC,MAAM,CAC5B,CAAC;;QAED;QACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE;UAAEV,IAAI;UAAEF,KAAK;UAAEC;QAAK,CAAC,CAAC;;QAEpD;QACA,IAAIA,IAAG,KAAM,OAAM,IAAKA,IAAG,KAAM,aAAa,EAAE;UAC/C,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC;YAAExB,IAAI,EAAE;UAAQ,CAAC,CAAC;QACrC,OAAO,IAAIW,IAAG,KAAM,QAAQ,EAAE;UAC7B,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC;YAAExB,IAAI,EAAE;UAAU,CAAC,CAAC;QACvC,OAAO;UACN,IAAI,CAACuB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACvB;MACD,EAAE,OAAOC,KAAK,EAAE;QACf,IAAI,CAACA,KAAK,CAAClB,QAAQ,EAAE;UACpB,IAAI,CAACH,YAAW,GACf,6DAA6D;QAC/D,OAAO,IAAIqB,KAAK,CAAClB,QAAQ,CAACmB,MAAK,KAAM,GAAG,EAAE;UACzC,IAAI,CAACtB,YAAW,GAAIqB,KAAK,CAAClB,QAAQ,CAACN,IAAI,CAACwB,KAAK;QAC9C,OAAO;UACN,IAAI,CAACrB,YAAW,GACf,6DAA6D;QAC/D;QACAU,OAAO,CAACW,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACtC;IACD;EACD;AACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}